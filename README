=======
Colbert
=======


*Colbert* is not about Stephen Colbert. It is serious matter.

The name is a homage to `Jean-Baptiste Colbert <http://en.wikipedia.org/wiki/Jean-Baptiste_Colbert>`_, the Minister of Finance of France in the 17th century 
also known for being the father of the modern accountancy.


The big disclaimer(s)
=====================

I don't know shit about accountancy. I am running a very small business since 2011 and there is two things I wanted to avoid for my fiscal and financial obligations:

1. to throw 3k€/year to pay someone Porsche ;
2. to learn a terrible closed source piece of accountancy software instead of understanding the roots.

So I first decided to write a *Django* project to record my expenses, my incomes and automagically generate the client's invoices.
That worked pretty well and I am still using it for the *LaTeX* invoices.

But when the administrative procedures are falling you are facing the reality. You cannot do accountancy without understanding accountancy.

I decided to restart from scratch with a very light architecture while learning the *discipline* allowing me to quickly adapt to the new knowledge 
I was going to acquire during the development process. Learning accountancy is a big task and this is illusion to think that you can learn first and modelize it in a second step.

And you know what ? The concepts behind the accountancy as they were thought four centuries ago are pure beauty. As beautiful as Unix' pipes.
Simple, universal and powerful. 

It is all about *inputs* and *outputs*. Every single input must be balanced by an output of the same amount and *vice-versa*.

The idea behind the *Plan Comptable Général* (Chart of accounts) is of the same blood.
In Unix, everything is a file. In accountancy, everything is an account.

You can see accounts like a filesystem. You can create as much leafs and forks as you need.

|
This is a work in progress and the product is at his very early stage. A lot of refactoring in the code will happen but for now I keep it as much simple as I can.
This is not yet an object-oriented program with metaclasses and other fancy concepts. 
I need to keep the codebase easy to move as long as I have not validate my knowledge which may take a couple of years.

Some stuffs are hard-coded because at a proof-of-concept stage.


All that prose to say «don't blind-trust this software if you want to use it».


Being french, this software is written for french accountancy in a french vocable. But the concept seems to be universal and with a little
effort you can fork it to match what you need in your own country.

I am using the BSD implementation of your favorite tools (*sed*, *grep* etc).


The concepts
============


*Colbert* is all about human-readable text files. *reStructuredText* and *JSON* files. You organize those files in a logical manner and extensively
use *Makefiles* to generate other files and produce beautiful *LaTeX* and *PDF* outputs for the administration and youself.

The core of accountancy is *le livre-journal* (grow a mustache and try to pronounce it with a glass of *Bordeaux Haut-Médoc* in your right-hand).
This is our «database» where every single operation occuring in your business is recorded. 

This book is usualy splitted in several ones to regroup together operations by type. I don't need that, so I don't do that.


my organization is the following::


    + MyBusiness/   +-- accountancy/    +-- livre-journal/  +-- livre-journal.txt 
                                        |                   | 
                                        |                   +-- Makefile 
                                        |
                                        +-- 2011/   +-- grand-livre/
                                                    |
                                                    +-- releves-bancaires/  
                                                    |
                                                    +-- factures/           
                                                    |
                                                    +-- balance-des-comptes/
                                                    |
                                                    +-- bilan/
                                                    |
                                                    +-- compte-de-resultat/ 
                                                    |
                                                    +-- TVA/                
                                                    |
                                                    +-- ecritures-de-cloture/


*Le livre-journal* is a never-ending story, this is the reason for keeping it at the root level. In accountancy, a main concept is
*l'indépendance des exercices comptables* which is why I have broken down my organization by year (I am opening my accounts the 1st of
junary and closing them the 31th of december, every year).

In each year directory reside sub-directories named with the tasks, books or documents you have to deal with and produce all along the financial/fiscal year.

Almost every sub-directory should contains a Makefile to automatically call some Colbert or LaTeX routines to update your files from the source 
(which may be the *livre-journal* or the *Grand-livre*).


In a nutshell, a typical usage at the end of a fiscal year is:

1. Having a *Livre-journal* up-to-date and accurate ;
2. check your *relevés bancaires* (statement of account ?) against the Livre-journal. Go back to (1) if it is not the case ;
3. generate the *Grand-livre* as JSON from the Livre-journal ;
4. generate the *Balance des comptes* from the *grand_livre.json* file ;
5. compute the *Bilan* from  the *grand_livre.json* file ;
6. compute the *Compte de résultat* from  the *grand_livre.json* file ;
7. compute the *écritures de clôture* from  the *grand_livre.json* file and write them back to the Livre-journal ;



**Note** : each *JSON* file can be converted in a *reStructuredText* format with a *colbert_\*_to_rst* script. 


Le Livre-journal
----------------

The Livre-journal is a diary or a book where every flow of money is logged. There is a tight legislation concerning those books in general and
you must refer yourself to the legislation of your country or juridiction.

In Colbert, this is a reStructuredText file meeting the french administration requirements (the columns' width had been reduced to fit properly in this document)::


    ==================
    MyBusiness S.A.R.L
    ==================

    -------------
    Livre-Journal
    -------------

    +-------------+-----------------+-----------------+-------------------------------------------------+-----------+-----------+
    | Date        |  N°compte débit | N°compte crédit |   Intitulé / nom du compte                      | Débit en €| Crédit en |
    +=============+=================+=================+=================================================+===========+===========+
    | *Mars 2011*                                                                                                               |
    +-------------+-----------------+-----------------+-------------------------------------------------+-----------+-----------+
    || 18/03/2011 ||                ||                || Frais de constitution de la société CFE Paris. ||          ||          |
    ||            ||    6227        ||                || Achats - Frais d'actes et de contentieux       ||  80.00   ||          |
    ||            ||    44566       ||                || T.V.A. déductible sur autres biens et services ||  10.45   ||          |
    ||            ||                ||     455        ||     Associés - Comptes courants                ||          ||    90.45 |
    +-------------+-----------------+-----------------+-------------------------------------------------+-----------+-----------+
    || 18/03/2011 ||                ||                || Frais de constitution de la société - Annonce  ||          ||          |
    ||            ||    6227        ||                || Achats - Frais d'actes et de contentieux       ||  80.00   ||          |
    ||            ||    44566       ||                || T.V.A. déductible sur autres biens et services ||  19.00   ||          |
    ||            ||                ||     455        ||     Associés - Comptes courants                ||          ||    99.00 |
    +-------------+-----------------+-----------------+-------------------------------------------------+-----------+-----------+
    || 31/03/2011 ||                ||                || Facture 2011-01 MyClient1                      ||          ||          |
    ||            ||                ||                ||       Prestation MyClient1 mars 2011           ||          ||          |
    ||            ||    4111-CL1    ||                ||     Clients - ventes de biens ou prestations   ||  980.00  ||          |
    ||            ||                ||    706         ||      Produits - prestations de services        ||          ||  5 000.00|
    ||            ||                ||    44587       ||      Taxes sur le CA sur factures à établir    ||          ||  980.00  |
    +-------------+-----------------+-----------------+-------------------------------------------------+-----------+-----------+
    | *Avril 2011*                                                                                                              |
    +-------------+-----------------+-----------------+-------------------------------------------------+-----------+-----------+
    || 01/04/2011 ||                ||                || Résultat arrêté compte                         ||          ||          |
    ||            ||    6278-LCL    ||                || Autres frais de commission sur prestations     ||  48.00   ||          |
    ||            ||                ||     512        ||     Banques                                    ||          ||   48.00  |
    +-------------+-----------------+-----------------+-------------------------------------------------+-----------+-----------+



Each entry is a multiline row in the table. 

I use *Line Blocks* to get a descent formatting in the muttiline cells. Trying to right-align the content of the two last columns was a failure.
In fact for a reason I don't get, if those values are not left-aligned, the LaTeX conversion sucks.

Checking the Livre-journal
''''''''''''''''''''''''''

A first script allows you to check the entries balance of the book::

    $ colbert_check_livre_journal.py my_livre_journal.txt


My Makefile in the Livre-journal directory being::

    
    FILENAME="livre-journal"

    all:	pdf

    pdf:	tex
        @pdflatex $(FILENAME).tex
        @pdflatex $(FILENAME).tex
        @colbert_check_livre_journal.py $(FILENAME).txt

    tex:
        @rst2latex.py $(FILENAME).txt > $(FILENAME).tex

    clean:
        @rm $(FILENAME).out 
        @rm $(FILENAME).aux 
        @rm $(FILENAME).log 


Computing VAT
'''''''''''''

The *colbert_solder_tva.py* script compute the flow of money on the VAT-related accounts for a period of time and produce an JSON-entry
to counter-balance these entries. Then you (manually) copy/paste this entry in the Livre-journal.
Obviously, the JSON-entry need to be converted first in the reStructuredText format of the Livre-journal with the *colbert_ecritures_to_livre_journal.py*
utility.

This is something you have to do every month or every quarter in France.

In the *TVA* directory::

    $ colbert_solder_tva ../../livre-journal/livre-journal.txt -d 01/03/2011 -f 30/9/2011 > solde-tva-sept-2011.json
    $ colbert_ecritures_to_livre_journal solde-tva-sept-2011.json > solde-tva-sept-2011.txt


Le Grand-livre
--------------

In that book are gathered the entries of the Livre-journal by account number for a period of time (a fiscal year). One table for every single account.

Every account should starts with the *report à nouveau* (the balance) of the previous fiscal year. This is not implemented yet in Colbert.

To generate the Grand-livre, run the following::

    $ @colbert_grand_livre.py ../../livre-journal/livre-journal.txt --label="MyBusiness - Grand-Livre 2011" -d 1/1/2011 -f 31/12/2011 > grand-livre_2011.json

And then in reStructuredText::

    $ colbert_grand_livre_to_rst.py grand-livre_2011.json > grand-livre_2011.txt


Or in a Makefile::

    FILENAME="grand_livre-2011"
    DATE_DEBUT="18/03/2011"
    DATE_FIN="31/12/2011"

    all:	pdf

    pdf:	tex
        @pdflatex $(FILENAME).tex
        @pdflatex $(FILENAME).tex
        @pdflatex $(FILENAME).tex

    tex:	rst
        @rst2latex.py --table-style=booktabs $(FILENAME).txt >  $(FILENAME).tex.tmp
        @sed -E -f fix_table.sed < $(FILENAME).tex.tmp > $(FILENAME).tex

    rst:	json
        @echo "Conversion du grand livre au format RestructuredText..."
        @colbert_grand_livre_to_rst.py $(FILENAME).json > $(FILENAME).txt

    json:
        @echo "calcul du Grand-Livre..."
        @colbert_grand_livre.py ../../livre-journal/livre-journal.txt --label="MyBusiness - Grand-Livre 2011" -d $(DATE_DEBUT) -f $(DATE_FIN) > $(FILENAME).json

    purge:	clean
        @rm $(FILENAME).pdf
        @rm $(FILENAME).tex
        @rm $(FILENAME).txt

    clean:
        @rm $(FILENAME).out 
        @rm $(FILENAME).aux 
        @rm $(FILENAME).log 



Working with LaTeX
==================

I convert my reStructuredText files using docutils' *rst2latex.py* with the *--table-style=booktabs* option except for the
Livre-journal.

Aside each Makefile in each directory (like *TVA* or *grand-livre*) there is a docutils configuration file *docutils.conf* and 
a LaTeX stylesheet *docutils.tex*.

Because I want to right-align some columns and because docutils does not handle that, I process the LaTeX outputs with a 
bit of *Sed* before the PDF conversion.


The docutils.conf file
----------------------

Always the same::

    [latex2e writer]
    documentclass: article
    documentoptions: 11pt,a4paper,landscape
    output-encoding: utf-8
    stylesheet: docutils.tex

The docutils.tex stylesheet
---------------------------

Almost always::

    \usepackage{fullpage}
    \usepackage[french]{babel}
    \usepackage{array}

If the LaTeX compiler complains about utf-8 you may add the *ucs* package.


The Sed script
--------------

The idea is to change the table(s) declaration(s) to get columns with managed width and alignment.


In the Makefile it looks like that::

    tex:	rst
    	@rst2latex.py --table-style=booktabs $(FILENAME).txt >  $(FILENAME).tex.tmp
    	@sed -E -f fix_table.sed < $(FILENAME).tex.tmp > $(FILENAME).tex


The Sed script depends of the TeX file. Here an example::


    s/\\begin{longtable\*}.*/\\newcolumntype{x}[1]{% \
    >{\\raggedleft\\hspace{0pt}}p{#1}}% \
    \\newcolumntype{y}[1]{% \
    >{\\raggedright\\hspace{0pt}}p{#1}}% \
    \\begin{longtable*}[c]{y{2cm}y{7.5cm}x{2cm}|y{2cm}y{7.5cm}x{2cm}}/
    s/\\\\/\\tabularnewline/


Installation
============

Hey, this is a Python package, so just run *python setup.py install* and you're done.


Tests
=====

There are some regression tests in the *test* directory.


Requirements
============

- Python 2.6+.
- Docutils, the SVN version is better.
- A LaTex suite if you want to render the reStructuredText in PDF. 
- Make.
- Sed.

